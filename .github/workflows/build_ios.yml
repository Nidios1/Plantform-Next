name: Build iOS IPA

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Flutter doctor
      run: flutter doctor -v
      
    - name: Check project structure
      run: |
        pwd
        ls -la
        echo "Checking if platformnext_vpn directory exists..."
        ls -la platformnext_vpn/
        echo "Checking pubspec.yaml..."
        cat platformnext_vpn/pubspec.yaml
        echo "Checking if this is a Flutter project..."
        flutter --version
      
    - name: Get dependencies
      run: |
        cd platformnext_vpn
        flutter pub get
      
    - name: Generate iOS files
      run: |
        cd platformnext_vpn
        flutter precache --ios
        flutter build ios --no-codesign --debug
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Setup iOS signing
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # Import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # Apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
    - name: Build iOS app
      run: |
        cd platformnext_vpn
        flutter build ios --release --no-codesign
        
    - name: Build IPA
      run: |
        cd platformnext_vpn/ios
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath Runner.xcarchive \
          archive
          
        xcodebuild -exportArchive \
          -archivePath Runner.xcarchive \
          -exportPath . \
          -exportOptionsPlist ExportOptions.plist
          
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: platformnext-vpn-ipa
        path: platformnext_vpn/ios/*.ipa
        retention-days: 30
        
    - name: Upload to App Store Connect (optional)
      if: github.ref == 'refs/heads/main'
      env:
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      run: |
        # Install App Store Connect API tools
        gem install fastlane
        
        # Upload to App Store Connect
        fastlane pilot upload --ipa "platformnext_vpn/ios/*.ipa" \
          --api_key_path "$APP_STORE_CONNECT_API_KEY" \
          --issuer_id "$APP_STORE_CONNECT_ISSUER_ID" \
          --key_id "$APP_STORE_CONNECT_KEY_ID"
